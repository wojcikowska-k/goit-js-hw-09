{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,uBACjCC,EAASF,SAASC,cAAc,sBAChCE,EAAWH,SAASC,cAAc,wBAClCG,EAASJ,SAASC,cAAc,QAEhCI,EAAgB,SAACC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAwCK,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAEpDG,EAAK,sBAAqCI,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,GAEnDA,E,KAoBPH,EAAOW,iBAAiB,UAAU,SAAAC,GAChCA,EAAMC,iBAjBgB,WAGtB,IAFA,IAAIV,GAASR,EAAQmB,MAEZC,EAAI,EAAGA,GAAKhB,EAASe,MAAOC,IACnCd,EAAcc,EAAGZ,GACda,MAAK,SAAAX,GACJY,EAAAxB,GAASyB,OAAOC,QAAQd,E,IAEzBe,OAAM,SAAAd,GACLW,EAAAxB,GAASyB,OAAOG,QAAQf,E,IAG5BH,IAAUL,EAAOgB,K,CAMnBQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\nconst formEl = document.querySelector('form');\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n};\n\nconst displayPromises = () => {\n  let delay = +delayEl.value;\n\n  for (let i = 1; i <= amountEl.value; i++) {\n    createPromise(i, delay)\n      .then(resolve => {\n        Notiflix.Notify.success(resolve);\n      })\n      .catch(reject => {\n        Notiflix.Notify.failure(reject);\n      });\n\n    delay += +stepEl.value;\n  }\n};\n\nformEl.addEventListener('submit', event => {\n  event.preventDefault();\n  displayPromises();\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delayEl","document","querySelector","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$formEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","concat","addEventListener","event","preventDefault","value","i","then","$parcel$interopDefault","Notify","success","catch","failure","$ce04d3a99e08e73b$var$displayPromises"],"version":3,"file":"03-promises.a7912bef.js.map"}